<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.fh</groupId>
        <artifactId>microservice-try</artifactId>
        <version>0.0.1-SNAPSHOT</version>
<!--        <relativePath/>-->
    </parent>

    <artifactId>try-mybatis</artifactId>

    <properties>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--  scope可取：compile、test、provided、system、runtime、import      -->
        <!--  scope可取：compile（默认） 对main、test、开发过程和部署到服务器是有效的      -->
        <!--  scope可取：test 对test、开发过程是有效的      -->
        <!--  scope可取：provided 部署到服务器是无效的 服务器中已经有该jar     -->
        <!--  scope可取：runtime 表示该包不参与编译，只参与运行      -->
        <!--  scope可取：system 表示被依赖项不会从 maven 仓库中查找，而是从本地系统中获取      -->
        <!--  scope可取：import scope只能用在dependencyManagement里面  -->

    </dependencies>


    <build>
        <resources>
            <!-- 以下的这几种过滤规则最后取并集 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <excludes>
                    <exclude>static/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>static/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>static/**</exclude>
                </excludes>
            </resource>

        </resources>

        <plugins>

            <!-- 1.结构定制化的打包，打包规则定义到一个xml文件中 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptors>
                        <!-- 描述文件路径 -->
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                    <!-- 打包解压后的目录名：${project.artifactId}是指：项目的artifactId -->
                    <finalName>${project.artifactId}</finalName>
                    <!-- 打包压缩包位置 -->
                    <outputDirectory>${project.build.directory}/</outputDirectory>
                </configuration>
                <!-- 加上下面这一段,使用 maven package命令,不加则使用mvn assembly-->
                <executions>
                    <execution>
                        <id>make-assembly</id><!--名字任意 -->
                        <phase>package</phase><!-- 绑定到package生命周期阶段上 -->
                        <goals>
                            <goal>single</goal><!-- 只运行一次 -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>


</project>
